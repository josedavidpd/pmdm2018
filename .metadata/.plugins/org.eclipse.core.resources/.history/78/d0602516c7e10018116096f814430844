package com.salesianostriana.campkilo.model;


import java.util.Collection;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;



@Entity 
public class Usuario implements UserDetails {

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Long id;
	
	private String email;	
	private String name;
	private String password;
	private String group_name;
	private boolean enabled;
	private Set <Authority> authorities;
	private Set <Camapania> camapania;
	private Set <Aportaciones> aportaciones;
	
	public Usuario() { }
	
	public Usuario(String name, String password, boolean enabled, Set<Authority> authorities) {
		super();
		this.name = name;
		this.password = password;
		this.enabled = enabled;
		this.authorities = authorities;
	}
	

	public Usuario(Long id, String email, String name, String password, String group_name, boolean enabled,
			Set<Authority> authorities, Set<Camapania> camapania, Set<Aportaciones> aportaciones) {
		super();
		this.id = id;
		this.email = email;
		this.name = name;
		this.password = password;
		this.group_name = group_name;
		this.enabled = enabled;
		this.authorities = authorities;
		this.camapania = camapania;
		this.aportaciones = aportaciones;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getGroup_name() {
		return group_name;
	}

	public void setGroup_name(String group_name) {
		this.group_name = group_name;
	}

	public boolean isEnabled() {
		return enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}


	public Set<Camapania> getCamapania() {
		return camapania;
	}

	public void setCamapania(Set<Camapania> camapania) {
		this.camapania = camapania;
	}

	public Set<Aportaciones> getAportaciones() {
		return aportaciones;
	}

	public void setAportaciones(Set<Aportaciones> aportaciones) {
		this.aportaciones = aportaciones;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((aportaciones == null) ? 0 : aportaciones.hashCode());
		result = prime * result + ((authorities == null) ? 0 : authorities.hashCode());
		result = prime * result + ((camapania == null) ? 0 : camapania.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + (enabled ? 1231 : 1237);
		result = prime * result + ((group_name == null) ? 0 : group_name.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Usuario other = (Usuario) obj;
		if (aportaciones == null) {
			if (other.aportaciones != null)
				return false;
		} else if (!aportaciones.equals(other.aportaciones))
			return false;
		if (authorities == null) {
			if (other.authorities != null)
				return false;
		} else if (!authorities.equals(other.authorities))
			return false;
		if (camapania == null) {
			if (other.camapania != null)
				return false;
		} else if (!camapania.equals(other.camapania))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (enabled != other.enabled)
			return false;
		if (group_name == null) {
			if (other.group_name != null)
				return false;
		} else if (!group_name.equals(other.group_name))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Usuario [id=" + id + ", email=" + email + ", name=" + name + ", password=" + password + ", group_name="
				+ group_name + ", enabled=" + enabled + ", authorities=" + authorities + ", camapania=" + camapania
				+ ", aportaciones=" + aportaciones + "]";
	}
	
	@Override
	public String getUsername() {
		return null;
	}

	@Override
	public boolean isAccountNonExpired() {
		return false;
	}


	@Override
	public boolean isAccountNonLocked() {
		return false;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return false;
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return null;
	}	
	
	public void setAuthorities(Set<Authority> authorities) {
		this.authorities = authorities;
	}
}
